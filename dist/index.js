/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/notepack.io/browser/decode.js":
/*!****************************************************!*\
  !*** ./node_modules/notepack.io/browser/decode.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n\n\n//# sourceURL=webpack://cursor-game/./node_modules/notepack.io/browser/decode.js?");

/***/ }),

/***/ "./node_modules/notepack.io/browser/encode.js":
/*!****************************************************!*\
  !*** ./node_modules/notepack.io/browser/encode.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n\n\n//# sourceURL=webpack://cursor-game/./node_modules/notepack.io/browser/encode.js?");

/***/ }),

/***/ "./node_modules/notepack.io/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/notepack.io/lib/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.encode = __webpack_require__(/*! ./encode */ \"./node_modules/notepack.io/browser/encode.js\");\nexports.decode = __webpack_require__(/*! ./decode */ \"./node_modules/notepack.io/browser/decode.js\");\n\n\n//# sourceURL=webpack://cursor-game/./node_modules/notepack.io/lib/index.js?");

/***/ }),

/***/ "./src/client/client.js":
/*!******************************!*\
  !*** ./src/client/client.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst utils = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\nconst CrossTab = __webpack_require__(/*! ./cross-tab.js */ \"./src/client/cross-tab.js\")\nconst Game = __webpack_require__(/*! ./game.js */ \"./src/client/game.js\");\nconst Renderer = __webpack_require__(/*! ./renderer.js */ \"./src/client/renderer.js\");\nconst Loader = __webpack_require__(/*! ./loader.js */ \"./src/client/loader.js\");\n\nif (true) window.Game = Game;\n\nLoader.assets = {\n    unloaded: [\n        {\n            id: \"player_join\",\n            src: \"player_join.wav\",\n            type: \"audio\"\n        },\n        {\n            id: \"player_leave\",\n            src: \"player_leave.wav\",\n            type: \"audio\"\n        },\n        {\n            id: \"new_message\",\n            src: \"message.wav\",\n            type: \"audio\"\n        },\n    ],\n    audio: {},\n};\n\nlet assets = null;\n\nasync function setup() {\n\tlet CTChannel = new CrossTab();\n    assets = await Loader.loadAssets();\n    Renderer.setup();\n\n    try {\n        await Game.establishConnection();\n    } catch(e) {\n        console.log(\"%cUnable to connect to the game.\", \"color:red;font-weight:bold;\");\n        return await setup();\n    }\n    console.log(\"%cSuccessfully connected to the game!\", \"color:lime;font-weight:bold;\");\n\n    Game.syncSettings();\n    Game.start();\n\n    setInterval(()=>Game.tick(), 50)\n    setInterval(()=>Game.tickHighFreq(), 5)\n    setInterval(()=>Game.tickLowFreq(), 500)\n\n    Game.event.addEventListener(\"user_join\", (player) => {\n        assets.audio.player_join.play();\n    });\n\n    Game.event.addEventListener(\"user_leave\", (player) => {\n        assets.audio.player_leave.play();\n    });\n\n    Game.event.addEventListener(\"chat_message\", (msg) => {\n        assets.audio.new_message.play();\n    });\n}\n\nwindow.onload = setup;\n\nvar t0 = 0;\nfunction frame(t1) {\n\tGame.fps = Math.round(1000/(t1-t0));\n\tt0 = t1;\n    Game.draw();\n\trequestAnimationFrame(frame);\n}\nrequestAnimationFrame(frame);\n\n// Trick webpack into thinking it's a ES6 module\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {}\n\n//# sourceURL=webpack://cursor-game/./src/client/client.js?");

/***/ }),

/***/ "./src/client/cross-tab.js":
/*!*********************************!*\
  !*** ./src/client/cross-tab.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Listener = __webpack_require__(/*! ../listeners.js */ \"./src/listeners.js\")\nclass CrossTab extends BroadcastChannel{\n\tevent = new Listener;\n\tconstructor(){\n\t\tsuper(\"tab\")\n\t\tthis.onmessage = this.recieve\n\t\tthis.alone = true // means there is only 1 tab\n\t\tthis.send({type: \"loaded\"})\n\t}\n\n\tsend(obj){\n\t\tthis.postMessage(JSON.stringify(obj))\n\t}\n\n\trecieve(msgEvent){\n\t\tlet data = JSON.parse(msgEvent.data)\n\t\tswitch(data.type){\n\t\t\tcase \"loaded\": //another tab loaded (bad)\n\t\t\t\tthis.alone = false\n\t\t\t\tevent.dispatchEvent(\"newTab\")\n\t\t\t\tconsole.log(\"New tab (not cool)\")\n\t\t\tbreak\n\t\t}\n\t}\n}\nmodule.exports = CrossTab\n\n//# sourceURL=webpack://cursor-game/./src/client/cross-tab.js?");

/***/ }),

/***/ "./src/client/domworker.js":
/*!*********************************!*\
  !*** ./src/client/domworker.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Listener = __webpack_require__(/*! ../listeners.js */ \"./src/listeners.js\");\n\nclass DomWorker {\n    static event = new Listener();\n\n    static setup() {\n        document.querySelector(\"#chat\").addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            const input = document.querySelector(\"#chat > input\");\n\n            this.event.dispatchEvent(\"chat\",input.value);\n            input.value = \"\";\n        })\n        document.querySelector(\"#nick\").addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            const input = document.querySelector(\"#nick > input\");\n\n            this.event.dispatchEvent(\"nick\",input.value);\n            input.value = \"\";\n        })\n        document.querySelector(\"#color\").addEventListener(\"input\", (e) => {\n            const input = document.querySelector(\"#color\");\n            this.event.dispatchEvent(\"color\", input.value);\n        })\n\t\tdocument.querySelector(\"#minigames\").addEventListener(\"click\", (e)=>{\n\t\t\talert(\"We didn't make minigames yet, sorry ;)\")\n\t\t})\n        document.querySelector(\"#disconnect-warning\").classList.add(\"hidden\");\n        document.querySelector(\"#disconnect-warning > .container > button\").addEventListener(\"click\", () => {\n            document.location.reload()\n        });\n    }\n    static setColor(color) {\n        document.querySelector(\"#color\").value = color;\n    }\n    static setStats(stats) {\n        const {fps, ping, players} = stats;\n        if(fps) document.querySelector(\"#fps-counter\").textContent = fps;\n        if(ping) document.querySelector(\"#ping-counter\").textContent = ping;\n        if(players) document.querySelector(\"#players-online\").innerText = players;\n    }\n    static showDisconnectionWarning() {\n        document.querySelector(\"#disconnect-warning\").classList.remove(\"hidden\");\n    }\n}\n\nmodule.exports = DomWorker;\n\n//# sourceURL=webpack://cursor-game/./src/client/domworker.js?");

/***/ }),

/***/ "./src/client/game.js":
/*!****************************!*\
  !*** ./src/client/game.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const SocketClient = __webpack_require__(/*! ./websocket.js */ \"./src/client/websocket.js\");\nconst Renderer = __webpack_require__(/*! ./renderer.js */ \"./src/client/renderer.js\");\nconst Input = __webpack_require__(/*! ./input.js */ \"./src/client/input.js\");\nconst Player = __webpack_require__(/*! ./player.js */ \"./src/client/player.js\");\nconst Listener = __webpack_require__(/*! ../listeners.js */ \"./src/listeners.js\");\nconst DomWorker = __webpack_require__(/*! ./domworker.js */ \"./src/client/domworker.js\");\nconst { randint } = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\nclass Game {\n    static event = new Listener();\n    static config = {\n        mouseFloatPrecision: 2000,\n        socketUrl: \"wss://\" + location.hostname,\n    }\n    static data = {\n        cursors: {},\n        chats: {},\n    }\n\n    //Default settings without localstorage\n    static settings = {\n        color: \"#\" + randint(0x111111, 0xffffff).toString(16),\n        nick: \"No nickname\",\n    }\n    static ws = null;\n    static me = new Player();\n\n    static fetchSettings() {\n        Object.assign(this.settings,localStorage);\n        this.settings.Length = undefined;\n        \n        this.me.c = this.settings.color;\n        this.me.nick = this.settings.nick;\n        DomWorker.setColor(this.settings.color);\n    }\n    static saveSettings() {\n        Object.assign(localStorage,this.settings);\n        \n        this.me.c = this.settings.color;\n        this.me.nick = this.settings.nick;\n    }\n\n    static syncSettings() {\n        SocketClient.updateState(this.me);\n    }\n\n    static start() {\n        Input.listen(Renderer.canvas);\n        DomWorker.setup();\n        DomWorker.event.addEventListener(\"chat\", (message) => {\n            SocketClient.sendMessage(message);\n        })\n        DomWorker.event.addEventListener(\"nick\", (nickname) => {\n            this.settings.nick = nickname;\n            this.saveSettings();\n            this.syncSettings();\n        })\n        DomWorker.event.addEventListener(\"color\", (color) => {\n            this.settings.color = color;\n            this.saveSettings();\n            this.syncSettings();\n        })\n\n        this.fetchSettings();\n        this.syncSettings();\n        \n        SocketClient.event.addEventListener(\"close\",(e) => {\n            DomWorker.showDisconnectionWarning();\n        });\n    }\n    static setupSocketListeners() {\n        this.me.id = SocketClient.userId;\n\n        SocketClient.event.addEventListener(\"message_USER_JOIN\", (user) => {\n            if(user.id != this.me.id)\n            this.userJoin(user);\n        })\n        SocketClient.event.addEventListener(\"message_USER_LEAVE\", (user) => {\n            if(user.id != this.me.id)\n            this.userLeave(user);\n        })\n        SocketClient.event.addEventListener(\"message_USER_MOVE\", (user) => {\n            if(user.id != this.me.id)\n            this.userMove(user);\n        })\n        SocketClient.event.addEventListener(\"message_DATA_CHANGE\", (user) => {\n            if(user.id != this.me.id)\n            this.userDataChange(user);\n        })\n        SocketClient.event.addEventListener(\"message_CHAT\", (data) => {\n            this.chatMessage(data);\n        })\n        SocketClient.event.addEventListener(\"message_IDENTIFY\", (user) => {\n            this.me.id = user.id;\n        })\n    }\n\n    static userJoin(user) {\n        const player = new Player(user);\n        this.data.cursors[user.id] = player;\n        this.event.dispatchEvent(\"user_join\",player);\n    }\n\n    static userLeave(user) {\n        const player = this.data.cursors[user.id];\n        if(!player) return;\n        \n        player.selfDestruct();\n\n        delete this.data.cursors[user.id];\n        this.event.dispatchEvent(\"user_leave\",user);\n    }\n\n    static userMove(user) {\n        const player = this.data.cursors[user.id];\n        if(!player) return;\n\n        player.merge(user);\n\n        this.event.dispatchEvent(\"user_move\",user);\n    }\n\n    static userDataChange(user) {\n        if(user.id == this.me.id) {\n            this.me.merge(user);\n        } else {\n            this.data.cursors[user.id].merge(user)\n        }\n        this.event.dispatchEvent(\"user_change\",user);\n    }\n\n    static chatMessage(data) {\n        let {msg, id} = data;\n        \n        this.data.chats[id] ??= [];\n        this.data.chats[id].push(msg);\n\n        setTimeout(() => {\n            this.data.chats[id].splice(0,1);\n        },msg.length * 150 + 5000);\n        \n        this.event.dispatchEvent(\"chat_message\",data);\n    }\n\n    static tick() {\n        let [x,y] = this.screenToWorldSpace(Input.mouseX,Input.mouseY);\n\n        const newState = {\n            x, y, \n            p: Input.leftMousePressed\n        };\n        this.me.merge(newState);\n\n        if(Input.changed) SocketClient.updatePosition(newState);\n        Input.changed = false;\n    }\n\n    static tickHighFreq() {\n        for(let c of Object.keys(this.data.cursors)) {\n            let cursor = this.data.cursors[c];\n            cursor.tickInterpolation();\n        }\n        this.me.tickInterpolation();\n    }\n    \n    static async tickLowFreq() {\n        await SocketClient.ping();\n        \n        DomWorker.setStats({\n            fps: this.fps,\n            ping: Math.round(SocketClient.gamePing),\n\t\t\tplayers: Object.keys(this.data.cursors).length+1\n        })\n    }\n\n    static t0 = performance.now();\n    static t1 = performance.now();\n    static fps = 0;\n    static draw() {\n        Renderer.clear();\n        \n        for(let c of Object.keys(this.data.cursors)) {\n            let cursor = this.data.cursors[c];\n            let chatMessages = this.data.chats[c];\n            Renderer.renderPlayer(cursor,chatMessages);\n        }\n\n        Renderer.renderPlayer(this.me,this.data.chats[this.me.id]);\n    }\n\n    static screenToWorldSpace(x,y) {\n        return [\n            x / Renderer.canvas.width,\n            y / Renderer.canvas.height\n        ]\n    }\n\n    static async establishConnection() {\n        return new Promise((res,rej) => {\n            const socket = SocketClient.start(this.config.socketUrl);\n            this.ws = socket;\n            this.setupSocketListeners();\n\n            //Resolve on open\n            socket.onopen = () => {\n                socket.onerror = socket.onclose = null;\n                res(socket);\n            }\n\n            //If socket error or closed before opened then throw error\n            socket.onerror = () => {\n                this.ws = null;\n                rej(0);\n            }\n            socket.onclose = () => {\n                this.ws = null;\n                rej(1);\n            }\n        })\n    }\n}\n\nmodule.exports = Game;\n\n//# sourceURL=webpack://cursor-game/./src/client/game.js?");

/***/ }),

/***/ "./src/client/input.js":
/*!*****************************!*\
  !*** ./src/client/input.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Listener = __webpack_require__(/*! ../listeners.js */ \"./src/listeners.js\");\n\nclass Input {\n    static event = new Listener();\n    static leftMousePressed = false;\n    static rightMousePressed = false;\n    static middleMousePressed = false;\n    static mouseX = 0;\n    static mouseY = 0;\n    static keysPressed = [];\n\n    static listen(element) {\n        document.addEventListener(\"mousedown\", (e) => {\n\n            if(e.button == 0) this.leftMousePressed = true;\n            if(e.button == 1) this.rightMousePressed = true;\n            if(e.button == 2) this.middleMousePressed = true;\n            \n            this.changed = true;\n            this.event.dispatchEvent(\"mousedown\",e.button);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n\n        document.addEventListener(\"mouseup\", (e) => {\n\n            if(e.button == 0) this.leftMousePressed = false;\n            if(e.button == 1) this.rightMousePressed = false;\n            if(e.button == 2) this.middleMousePressed = false;\n            \n            this.changed = true;\n            this.event.dispatchEvent(\"mouseup\",e.button);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n\n        element.addEventListener(\"mousemove\", (e) => {\n            this.mouseX = e.offsetX;\n            this.mouseY = e.offsetY;\n\n            this.changed = true;\n            this.event.dispatchEvent(\"mousemove\",this.mouseX,this.mouseY);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n\n        element.addEventListener(\"touchmove\", (e) => {\n            let cvsOffset = ctx.canvas.getBoundingClientRect();\n            this.mouseX = e.touches[0].clientX - cvsOffset.x;\n            this.mouseY = e.touches[0].clientY - cvsOffset.y;\n\n            this.changed = true;\n            this.event.dispatchEvent(\"touchmove\",this.mouseX,this.mouseY);\n            this.event.dispatchEvent(\"mousemove\",this.mouseX,this.mouseY);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n\n        document.addEventListener(\"keydown\", (e) => {\n\n            let key = e.key.toLowerCase();\n            if(!this.keysPressed.includes(key)) this.keysPressed.push(key);\n            \n            this.changed = true;\n            this.event.dispatchEvent(\"keydown\".key);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n\n        document.addEventListener(\"keyup\", (e) => {\n\n            let key = e.key.toLowerCase();\n            if(this.keysPressed.includes(key)) this.keysPressed.splice(this.keysPressed.indexOf(key),1);\n            \n            this.changed = true;\n            this.event.dispatchEvent(\"keyup\",key);\n            this.event.dispatchEvent(\"inputchanged\");\n        })\n    }\n}\n\nmodule.exports = Input;\n\n//# sourceURL=webpack://cursor-game/./src/client/input.js?");

/***/ }),

/***/ "./src/client/loader.js":
/*!******************************!*\
  !*** ./src/client/loader.js ***!
  \******************************/
/***/ ((module) => {

eval("class AssetLoader {\n    static assets = {\n        unloaded: [],\n        audio: {}\n    };\n\n    static async loadSound(id,source) {\n        return new Promise((res,rej) => {\n            const audio = new Audio(source);\n\n            //When audio is loaded, create new function to play audio\n            audio.oncanplaythrough = () => {\n                this.assets.audio[id] = audio;\n                res(audio);\n            }\n\n            //Reject on audio error\n            audio.onerror = (e) => {\n                rej(\"Failed to load with code \"+e.code);\n            }\n        })\n    }\n\n    static async loadAssets() {\n        let concurrentPromises = [];\n        let failedPromises = 0;\n\n        //Queue promises\n\n        for(const asset of this.assets.unloaded) {\n\n            asset.src = \"assets/\"+asset.type+\"/\"+asset.src;\n            let promise = null;\n\n            switch(asset.type) {\n                case \"audio\":\n                    promise = this.loadSound(asset.id, asset.src);\n                    break;\n\n                default: \n                    console.warn(\"Tried to load unknown asset \\\"\"+asset.type+\"\\\"\");\n            }\n\n            //Error handling\n            promise.catch((e) => {\n                console.warn(\"Unable to load asset \"+asset.id+\"\\n\",e);\n                failedPromises++;\n            });\n            concurrentPromises.push(promise);\n        }\n\n        //Clear queue\n        this.assets.unloaded = [];\n\n        //Wait for all promises to resolve\n        for await(let promise of concurrentPromises) {\n            await promise;\n        }\n\n        return this.assets;\n    }\n}\n\nmodule.exports = AssetLoader;\n\n//# sourceURL=webpack://cursor-game/./src/client/loader.js?");

/***/ }),

/***/ "./src/client/player.js":
/*!******************************!*\
  !*** ./src/client/player.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { randint } = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\nclass Player {\n    static interpolationFactor = 6;\n\n\tconstructor(properties) {\n\t\tthis.x = 0.5;\n\t\tthis.y = 0.5;\n        this.appearX = 0.5;\n        this.appearY = 0.5;\n\t\tthis.p = false; // pressed (mouse click)\n\n\t\tthis.c = \"#\" + randint(256, 4096).toString(16); // colour\n\t\tthis.nick = \"Loading Name...\"; //nickname\n\n        this.id = null;\n\n        Object.assign(this,properties);\n    }\n    \n    merge(properties) {\n        Object.assign(this,properties);\n    }\n\n    tickInterpolation() {\n        let dx = this.x - this.appearX;\n        let dy = this.y - this.appearY;\n\n        this.appearX += (dx) / Player.interpolationFactor;\n        this.appearY += (dy) / Player.interpolationFactor;\n    }\n\n    selfDestruct() {\n        //haha player go boom    \n    }\n}\n\nmodule.exports = Player;\n\n//# sourceURL=webpack://cursor-game/./src/client/player.js?");

/***/ }),

/***/ "./src/client/renderer.js":
/*!********************************!*\
  !*** ./src/client/renderer.js ***!
  \********************************/
/***/ ((module) => {

eval("class Renderer {\n    static canvas = null;\n    static ctx = null;\n    static lineSpacing = 5;\n\n    static setup() {\n        this.canvas = document.querySelector(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        window.addEventListener(\"resize\", (e) => {\n            this.resizeCanvas();\n        });\n        this.resizeCanvas();\n        \n    }\n\n    static resizeCanvas() {\n        let size = this.canvas.getBoundingClientRect();\n        this.canvas.width = size.width;\n        this.canvas.height = size.height;\n        \n        this.ctx.font = \"18px calibri\";\n    }\n\n    static clear() {\n        this.ctx?.clearRect(0,0,this.canvas.width,this.canvas.height);\n    }\n\n    static renderPlayer(player, chats = []) {\n        if(!this.ctx) return;\n\n        let {p,c} = player;\n        let x = player.appearX || player.x;\n        let y = player.appearY || player.y;\n        x *= this.canvas.width;\n        y *= this.canvas.height;\n\n        //Player body\n\t\tthis.ctx.fillStyle = c;\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.arc(x, y, 5, 0, Math.PI * 2);\n\t\tthis.ctx.fill();\n\n        //Player name\n\t\tthis.drawText(player.nick, x + 5, y + this.lineSpacing, {verticalAlign: \"top\"});\n\n        //Player chat messages\n\t\tthis.ctx.fillStyle = \"#FFF\";\n\t\tchats = chats.slice(-8)\n        this.drawText(chats, x + 5, y);\n        \n        //Clicked cursor outline\n\t\tif(p) {\n            this.ctx.strokeStyle = c;\n            this.ctx.beginPath();\n            this.ctx.arc(x, y, 7, 0, Math.PI * 2);\n            this.ctx.stroke();\n        }\n    }\n\n    static drawText(text,x,y,options = {}) {\n        const {verticalAlign} = options;\n\n        if(!this.ctx) return;\n\n        if(text instanceof Array) {\n            let line = 0;\n            for(let t of text) {\n                const metrics = this.ctx.measureText(t);\n                let dist = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + this.lineSpacing;\n                this.ctx.fillText(t,x,y + line + dist);\n\n                line += dist;\n            }\n        } else {\n            const metrics = this.ctx.measureText(text);\n            let dist = verticalAlign == \"top\" ? -metrics.actualBoundingBoxAscent - metrics.actualBoundingBoxDescent + this.lineSpacing : metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + this.lineSpacing;\n            this.ctx.fillText(text,x,y + dist);\n        }\n    }\n}\n\nmodule.exports = Renderer;\n\n//# sourceURL=webpack://cursor-game/./src/client/renderer.js?");

/***/ }),

/***/ "./src/client/websocket.js":
/*!*********************************!*\
  !*** ./src/client/websocket.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const notepack = __webpack_require__(/*! notepack.io */ \"./node_modules/notepack.io/lib/index.js\");\n\nconst types = __webpack_require__(/*! ../types */ \"./src/types.js\");\nconst Listener = __webpack_require__(/*! ../listeners.js */ \"./src/listeners.js\");\n\nclass SocketClient {\n    static socket = null;\n    static event = new Listener();\n    static gamePing = 0;\n    static userId = null;\n\n    static async ping() {\n        //Measures round-trip ping\n        const t0 = performance.now();\n\n        this.sendJSON(types.PING, Math.floor(t0));\n        await this.event.waitForEvent(\"message_PING\");\n\n        const t1 = performance.now();\n\n        this.gamePing = t1 - t0;\n        return this.gamePing;\n    }\n    static start() {\n        const socket = new WebSocket(...arguments);\n        this.socket = socket;\n        this.open = true;\n        socket.onmessage = (e)=>{this.handleMessage(e)};\n        socket.onerror = (e) => {\n            this.event.dispatchEvent(\"error\",e);\n        }\n        socket.onclose = (e) => {\n            this.event.dispatchEvent(\"close\");\n        }\n\t\tconsole.log(this)\n        return socket;\n    }\n    static async handleMessage(raw) {\n        let [type, data] = notepack.decode(await raw.data.arrayBuffer());\n        if(type == types.IDENTIFY) this.userId = data.id;\n\n        this.event.dispatchEvent(\"message_\"+types.typeof(type),data);\n        this.event.dispatchEvent(\"message_generic\",data);\n    }\n    static sendJSON(type,data) {\n        if(this.socket.readyState >= 2) return this.event.dispatchEvent(\"close\");\n        this.socket.send(notepack.encode([type,data]));\n    }\n    static updateState(state) {\n        if(this.socket.readyState >= 2) return this.event.dispatchEvent(\"close\");\n        this.sendJSON(types.DATA_CHANGE,state);\n    }\n    static updatePosition(state) {\n        if(this.socket.readyState >= 2) return this.event.dispatchEvent(\"close\");\n        this.sendJSON(types.USER_MOVE,state);\n    }\n    static sendMessage(msg) {\n        if(this.socket.readyState >= 2) return this.event.dispatchEvent(\"close\");\n        this.sendJSON(types.CHAT,{msg});\n    }\n}\n\nmodule.exports = SocketClient;\n\n//# sourceURL=webpack://cursor-game/./src/client/websocket.js?");

/***/ }),

/***/ "./src/listeners.js":
/*!**************************!*\
  !*** ./src/listeners.js ***!
  \**************************/
/***/ ((module) => {

eval("class Listener {\n    static attach(object) {\n        const instance = new this();\n\n        //Copies a function over with same parameters\n        const copy = (...keys) => {\n            keys.forEach(n => {\n                //Use function for argument variable\n\n                const localFunction = instance[n];\n                object[n] = (...args) => {\n                    localFunction.call(instance,...args);\n                };\n            });\n        }\n\n        void copy(\"addEventListener\",\"removeEventListener\",\"dispatchEvent\",\"waitForEvent\");\n        return instance;\n    }\n\n    constructor() {\n        this.listeners = {};\n    }\n\n    addEventListener(id, callback) {\n        //listeners[id] is an array of callbacks\n\t\tthis.listeners[id] ??= [];\n        this.listeners[id].push(callback);\n        return callback;\n    }\n    removeEventListener(id, callback) {\n\t\tif (!this.listeners[id]) return false;\n\n        //Return if event was successfully removed\n        let found = false;\n\n        //Find specified callback in listeners with id and remove it\n\t\twhile(true){\n\t\t\tlet i = this.listeners[id].indexOf(callback);\n\t\t\tif (i === -1) break;\n\t\t\tthis.listeners[id].splice(i,1);\n\t\t\tfound = true;\n\t\t}\n\n        return found;\n    }\n    dispatchEvent(id, ...args) {\n        //Find callbacks from listener id and call them with args\n        this.listeners[id]?.forEach(callback => {\n            callback(...args);\n        })\n\n        this.listeners[\"*\"]?.forEach(callback => {\n            callback(id,...args);\n        })\n    }\n    waitForEvent(id) {\n        return new Promise((res,rej) => {\n            const listener = this.addEventListener(id, (...args)=>{\n                removeEventListener(id, listener);\n                res(...args);\n            });\n        });\n    }\n}\n\nmodule.exports = Listener;\n\n//# sourceURL=webpack://cursor-game/./src/listeners.js?");

/***/ }),

/***/ "./src/types.js":
/*!**********************!*\
  !*** ./src/types.js ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = {\n\ttypeof: function (number) {\n\t\treturn Object.entries(this).find(kv=>kv[1]===number)?.[0]\n\t},\n\t\n\tUSER_MOVE: 1,\n\tDATA_CHANGE: 2,\n\tUSER_JOIN: 3,\n\tUSER_LEAVE: 4,\n\tCHAT: 5,\n\tIDENTIFY: 6,\n\tPING: 7,\n};\n\n\n//# sourceURL=webpack://cursor-game/./src/types.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = {\n\trandint: (from, to) => Math.floor(Math.random() * (to - from)) + from,\n};\n\n\n//# sourceURL=webpack://cursor-game/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/client/client.js");
/******/ 	
/******/ })()
;